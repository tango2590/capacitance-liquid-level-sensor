#This code is for an ESP32. If you are using a different device, make changes accordingly.
captive_portal:
esp32_touch:
  setup_mode: true

binary_sensor:
  - platform: esp32_touch
    name: "ESP32 Capacitive Level Sensor"
#Pin should be set to whichever GPIO pin you used for your specific device (not the GND pin).
    pin: GPIO4
    threshold: 1000
    id: esp32_capacity

sensor:
#Calibrated datapoints that will display human-readable values in HA.
  - platform: template
    name: "Capacity Readings"
    id: "capacity_readings"
#Once calibration is finished, adjust the update_interval to your desired rate.
    update_interval: 3s
    accuracy_decimals: 0
    filters:
      - calibrate_polynomial:
          degree: 5
          datapoints:
          # Map 0.0 (from capacity sensor) to 0.0 (true value)
          - 880 -> 0
          - 823 -> 6.25
          - 723 -> 12.5
          - 613 -> 18.75
          - 554 -> 25
          - 481 -> 31.25
          - 422 -> 37.5
          - 385 -> 43.75
          - 355 -> 50
          - 333 -> 56.25
          - 311 -> 62.5
          - 305 -> 68.75
          - 273 -> 75
          - 267 -> 81.25
          - 246 -> 87.5
          - 238 -> 93.75
          - 222 -> 100
    lambda: |-
      return ((uint32_t) id(esp32_capacity)->get_value());
#Captures capacity readings from logs and displays them as a sensor visible in HA.
  - platform: template
    name: "Original Capacity Readings"
    id: "original_capacity_readings"
    update_interval: 3s
    accuracy_decimals: 0
    lambda: |-
      return ((uint32_t) id(esp32_capacity)->get_value());